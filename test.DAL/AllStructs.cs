using System; 
using System.Text; 
using System.Data;
using System.Data.SqlClient;
using System.Data.Common;
using System.Collections;
using System.Collections.Generic;
using System.ComponentModel;
using System.Configuration; 
using System.Xml; 
using System.Xml.Serialization;
using SubSonic; 
using SubSonic.Utilities;
// <auto-generated />
namespace CuaHangDAL
{
	#region Tables Struct
	public partial struct Tables
	{
		
		public static readonly string ChiTietSp = @"ChiTietSp";
        
		public static readonly string Cthd = @"CTHD";
        
		public static readonly string Ctpn = @"CTPN";
        
		public static readonly string DanHMuc = @"DanHMuc";
        
		public static readonly string Hd = @"HD";
        
		public static readonly string KhachHang = @"KhachHang";
        
		public static readonly string LoaiThanhVien = @"LoaiThanhVien";
        
		public static readonly string NhaCungCap = @"NhaCungCap";
        
		public static readonly string NhanVien = @"NhanVien";
        
		public static readonly string Pn = @"PN";
        
		public static readonly string SanPham = @"SanPham";
        
		public static readonly string TaiKhoan = @"TaiKhoan";
        
	}
	#endregion
    #region Schemas
    public partial class Schemas {
		
		public static TableSchema.Table ChiTietSp
		{
            get { return DataService.GetSchema("ChiTietSp", "AdventureWorks"); }
		}
        
		public static TableSchema.Table Cthd
		{
            get { return DataService.GetSchema("CTHD", "AdventureWorks"); }
		}
        
		public static TableSchema.Table Ctpn
		{
            get { return DataService.GetSchema("CTPN", "AdventureWorks"); }
		}
        
		public static TableSchema.Table DanHMuc
		{
            get { return DataService.GetSchema("DanHMuc", "AdventureWorks"); }
		}
        
		public static TableSchema.Table Hd
		{
            get { return DataService.GetSchema("HD", "AdventureWorks"); }
		}
        
		public static TableSchema.Table KhachHang
		{
            get { return DataService.GetSchema("KhachHang", "AdventureWorks"); }
		}
        
		public static TableSchema.Table LoaiThanhVien
		{
            get { return DataService.GetSchema("LoaiThanhVien", "AdventureWorks"); }
		}
        
		public static TableSchema.Table NhaCungCap
		{
            get { return DataService.GetSchema("NhaCungCap", "AdventureWorks"); }
		}
        
		public static TableSchema.Table NhanVien
		{
            get { return DataService.GetSchema("NhanVien", "AdventureWorks"); }
		}
        
		public static TableSchema.Table Pn
		{
            get { return DataService.GetSchema("PN", "AdventureWorks"); }
		}
        
		public static TableSchema.Table SanPham
		{
            get { return DataService.GetSchema("SanPham", "AdventureWorks"); }
		}
        
		public static TableSchema.Table TaiKhoan
		{
            get { return DataService.GetSchema("TaiKhoan", "AdventureWorks"); }
		}
        
	
    }
    #endregion
    #region View Struct
    public partial struct Views 
    {
		
    }
    #endregion
    
    #region Query Factories
	public static partial class DB
	{
        public static DataProvider _provider = DataService.Providers["AdventureWorks"];
        static ISubSonicRepository _repository;
        public static ISubSonicRepository Repository 
        {
            get 
            {
                if (_repository == null)
                    return new SubSonicRepository(_provider);
                return _repository; 
            }
            set { _repository = value; }
        }
        public static Select SelectAllColumnsFrom<T>() where T : RecordBase<T>, new()
	    {
            return Repository.SelectAllColumnsFrom<T>();
	    }
	    public static Select Select()
	    {
            return Repository.Select();
	    }
	    
		public static Select Select(params string[] columns)
		{
            return Repository.Select(columns);
        }
	    
		public static Select Select(params Aggregate[] aggregates)
		{
            return Repository.Select(aggregates);
        }
   
	    public static Update Update<T>() where T : RecordBase<T>, new()
	    {
            return Repository.Update<T>();
	    }
	    
	    public static Insert Insert()
	    {
            return Repository.Insert();
	    }
	    
	    public static Delete Delete()
	    {
            return Repository.Delete();
	    }
	    
	    public static InlineQuery Query()
	    {
            return Repository.Query();
	    }
	    	    
	    
	}
    #endregion
    
}
#region Databases
public partial struct Databases 
{
	
	public static readonly string AdventureWorks = @"AdventureWorks";
    
}
#endregion